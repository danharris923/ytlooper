const t={name:"Boss RC-1",brand:"BOSS",model:"RC-1",body:{background:"linear-gradient(135deg, #ff3333 0%, #dd2222 50%, #aa1111 100%)",stroke:"#990000",strokeWidth:2,borderRadius:8},controlPanel:{background:"#222",stroke:"#555",strokeWidth:1},display:{background:"#000",stroke:"#00ff00",strokeWidth:1,textColor:"#00ff00",textColorDim:"#00aa00",fontFamily:"Courier New, monospace"},knobs:{outer:"radial-gradient(circle at 30% 30%, #ffffff 0%, #f0f0f0 20%, #d0d0d0 60%, #b0b0b0 100%)",inner:"#ddd",pointer:"#333",pointerWidth:2,labelColor:"#fff",labelFont:"Arial, sans-serif"},buttons:{background:"#333",stroke:"#555",iconColor:"#ccc",hoverBackground:"#444",activeBackground:"#222"},leds:{off:{a:"#002200",b:"#002200",loop:"#331100"},on:{a:"radial-gradient(circle at 50% 30%, #44ff44 0%, #00aa00 100%)",b:"radial-gradient(circle at 50% 30%, #44ff44 0%, #00aa00 100%)",loop:"radial-gradient(circle at 50% 30%, #ffcc00 0%, #cc9900 100%)"},labelColor:"#fff"},footswitch:{background:"#000",stroke:"#333",strokeWidth:2,textColor:"#ccc",textureBackground:"#222"},text:{primary:"#fff",secondary:"#ccc",tertiary:"#888",brandFont:"Arial, sans-serif",labelFont:"Arial, sans-serif"},effects:{shadow:"0 12px 24px rgba(0,0,0,0.4)",metallic:!0}},e={"boss-rc1":t,"strymon-timeline":{name:"Strymon Timeline",brand:"STRYMON",model:"TIMELINE",body:{background:"linear-gradient(135deg, #4a6fa5 0%, #3a5f95 50%, #2a4f85 100%)",stroke:"#1a3f75",strokeWidth:2,borderRadius:12},controlPanel:{background:"linear-gradient(180deg, #e8e8e8 0%, #d0d0d0 100%)",stroke:"#999",strokeWidth:1},display:{background:"#001122",stroke:"#00aaff",strokeWidth:1,textColor:"#00ddff",textColorDim:"#0088cc",fontFamily:"Helvetica, Arial, sans-serif"},knobs:{outer:"radial-gradient(circle at 40% 40%, #ffffff 0%, #e0e0e0 30%, #c0c0c0 70%, #909090 100%)",inner:"#f5f5f5",pointer:"#000",pointerWidth:3,labelColor:"#000",labelFont:"Helvetica, Arial, sans-serif"},buttons:{background:"linear-gradient(180deg, #606060 0%, #404040 100%)",stroke:"#303030",iconColor:"#fff",hoverBackground:"#505050",activeBackground:"#303030"},leds:{off:{a:"#001133",b:"#001133",loop:"#110033"},on:{a:"radial-gradient(circle at 50% 30%, #00aaff 0%, #0066cc 100%)",b:"radial-gradient(circle at 50% 30%, #00aaff 0%, #0066cc 100%)",loop:"radial-gradient(circle at 50% 30%, #ff00ff 0%, #cc00cc 100%)"},labelColor:"#e0e0e0"},footswitch:{background:"linear-gradient(180deg, #1a1a1a 0%, #000000 100%)",stroke:"#444",strokeWidth:2,textColor:"#ddd",textureBackground:"#111"},text:{primary:"#fff",secondary:"#ddd",tertiary:"#aaa",brandFont:"Helvetica, Arial, sans-serif",labelFont:"Helvetica, Arial, sans-serif"},effects:{shadow:"0 8px 32px rgba(0,0,0,0.5)",metallic:!0,glow:"rgba(0, 170, 255, 0.3)"}},"empress-echosystem":{name:"Empress Echosystem",brand:"EMPRESS",model:"ECHOSYSTEM",body:{background:"linear-gradient(135deg, #1a3a2e 0%, #0f2818 50%, #061408 100%)",stroke:"#000",strokeWidth:2,borderRadius:6},controlPanel:{background:"#0a0a0a",stroke:"#333",strokeWidth:1},display:{background:"linear-gradient(180deg, #000 0%, #0a0a0a 100%)",stroke:"#ffa500",strokeWidth:1,textColor:"#ffa500",textColorDim:"#cc8400",fontFamily:"Monaco, Courier New, monospace"},knobs:{outer:"radial-gradient(circle at 35% 35%, #ffd700 0%, #ffcc00 30%, #cc9900 70%, #996600 100%)",inner:"#ffdd00",pointer:"#000",pointerWidth:2,labelColor:"#ffa500",labelFont:"Monaco, monospace"},buttons:{background:"#1a1a1a",stroke:"#444",iconColor:"#ffa500",hoverBackground:"#2a2a2a",activeBackground:"#0a0a0a"},leds:{off:{a:"#1a1a00",b:"#1a1a00",loop:"#1a0000"},on:{a:"radial-gradient(circle at 50% 30%, #ffff00 0%, #cccc00 100%)",b:"radial-gradient(circle at 50% 30%, #ffff00 0%, #cccc00 100%)",loop:"radial-gradient(circle at 50% 30%, #ff0000 0%, #cc0000 100%)"},labelColor:"#ffa500"},footswitch:{background:"#000",stroke:"#222",strokeWidth:2,textColor:"#ffa500",textureBackground:"#0a0a0a"},text:{primary:"#ffa500",secondary:"#cc8400",tertiary:"#996600",brandFont:"Monaco, monospace",labelFont:"Monaco, monospace"},effects:{shadow:"0 10px 30px rgba(0,0,0,0.6)",metallic:!0}},ehx:{name:"EHX Style",brand:"ELECTRO-HARMONIX",model:"LOOPER",body:{background:"linear-gradient(135deg, #c0c0c0 0%, #a0a0a0 50%, #808080 100%)",stroke:"#606060",strokeWidth:2,borderRadius:4},controlPanel:{background:"#000",stroke:"#333",strokeWidth:1},display:{background:"#000",stroke:"#ff0000",strokeWidth:1,textColor:"#ff0000",textColorDim:"#cc0000",fontFamily:"Impact, Arial Black, sans-serif"},knobs:{outer:"radial-gradient(circle at 30% 30%, #000 0%, #222 50%, #000 100%)",inner:"#111",pointer:"#fff",pointerWidth:2,labelColor:"#000",labelFont:"Impact, Arial Black, sans-serif"},buttons:{background:"#000",stroke:"#333",iconColor:"#fff",hoverBackground:"#222",activeBackground:"#000"},leds:{off:{a:"#330000",b:"#330000",loop:"#330000"},on:{a:"radial-gradient(circle at 50% 30%, #ff0000 0%, #aa0000 100%)",b:"radial-gradient(circle at 50% 30%, #ff0000 0%, #aa0000 100%)",loop:"radial-gradient(circle at 50% 30%, #ff0000 0%, #aa0000 100%)"},labelColor:"#000"},footswitch:{background:"#000",stroke:"#666",strokeWidth:3,textColor:"#fff"},text:{primary:"#000",secondary:"#333",tertiary:"#666",brandFont:"Impact, Arial Black, sans-serif",labelFont:"Arial, sans-serif"},effects:{shadow:"0 6px 12px rgba(0,0,0,0.3)",metallic:!0,worn:!0}},"tc-ditto":{name:"TC Ditto",brand:"TC ELECTRONIC",model:"DITTO",body:{background:"linear-gradient(135deg, #663399 0%, #552288 50%, #441177 100%)",stroke:"#330066",strokeWidth:2,borderRadius:10},controlPanel:{background:"rgba(0,0,0,0.3)",stroke:"rgba(255,255,255,0.1)",strokeWidth:1},display:{background:"rgba(0,0,0,0.8)",stroke:"#ff00ff",strokeWidth:1,textColor:"#ff00ff",textColorDim:"#cc00cc",fontFamily:"Orbitron, monospace"},knobs:{outer:"radial-gradient(circle at 30% 30%, #aaa 0%, #888 50%, #666 100%)",inner:"#999",pointer:"#fff",pointerWidth:2,labelColor:"#fff",labelFont:"Orbitron, monospace"},buttons:{background:"rgba(255,255,255,0.1)",stroke:"rgba(255,255,255,0.3)",iconColor:"#fff",hoverBackground:"rgba(255,255,255,0.2)",activeBackground:"rgba(255,255,255,0.05)"},leds:{off:{a:"#220022",b:"#220022",loop:"#220022"},on:{a:"radial-gradient(circle at 50% 30%, #ff00ff 0%, #cc00cc 100%)",b:"radial-gradient(circle at 50% 30%, #ff00ff 0%, #cc00cc 100%)",loop:"radial-gradient(circle at 50% 30%, #ffff00 0%, #cccc00 100%)"},labelColor:"#fff"},footswitch:{background:"radial-gradient(circle at 50% 50%, #222 0%, #000 100%)",stroke:"#444",strokeWidth:2,textColor:"#ff00ff"},text:{primary:"#fff",secondary:"#ddd",tertiary:"#aaa",brandFont:"Orbitron, monospace",labelFont:"Orbitron, monospace"},effects:{shadow:"0 10px 40px rgba(102,51,153,0.4)",glow:"rgba(255, 0, 255, 0.2)"}}};function i(i){return e[i]||t}class o{constructor(){this.audioContext=null,this.analyser=null,this.source=null,this.scriptProcessor=null,this.sampleRate=44100,this.bufferSize=2048,this.hopSize=512,this.peaks=[],this.beatTimes=[],this.spectralFlux=[],this.previousSpectrum=null,this.detectedBPM=120,this.confidence=0,this.tapTimes=[],this.initAudioContext()}async initAudioContext(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.sampleRate=this.audioContext.sampleRate}catch(t){console.error("Failed to initialize AudioContext:",t)}}async connectToMedia(t){if(this.audioContext||await this.initAudioContext(),!this.audioContext)throw new Error("AudioContext not available");this.disconnect();try{this.source=this.audioContext.createMediaElementSource(t),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.bufferSize,this.analyser.smoothingTimeConstant=.1,this.scriptProcessor=this.audioContext.createScriptProcessor(this.bufferSize,1,1),this.scriptProcessor.onaudioprocess=this.processAudio.bind(this),this.source.connect(this.analyser),this.analyser.connect(this.scriptProcessor),this.scriptProcessor.connect(this.audioContext.destination),this.source.connect(this.audioContext.destination)}catch(e){throw console.error("Failed to connect to media:",e),e}}processAudio(t){if(!this.analyser)return;const e=t.inputBuffer.getChannelData(0),i=new Float32Array(this.analyser.frequencyBinCount);this.analyser.getFloatFrequencyData(i);const o=this.calculateSpectralFlux(i);if(this.spectralFlux.push(o),this.isPeak(o)){const t=this.audioContext.currentTime;this.beatTimes.push(t),this.peaks.push(o),this.updateBPMEstimate()}this.pruneOldData();const s=t.outputBuffer;for(let n=0;n<s.numberOfChannels;n++){const t=s.getChannelData(n);0===n?t.set(e):t.fill(0)}}calculateSpectralFlux(t){let e=0;if(this.previousSpectrum){const i=Math.floor(500*this.bufferSize/this.sampleRate);for(let o=0;o<i;o++){const i=t[o]-this.previousSpectrum[o];i>0&&(e+=i)}}return this.previousSpectrum=new Float32Array(t),e}isPeak(t){if(this.spectralFlux.length<10)return!1;const e=this.spectralFlux.slice(-20),i=e.reduce((t,e)=>t+e,0)/e.length,o=e.reduce((t,e)=>t+Math.pow(e-i,2),0)/e.length,s=Math.sqrt(o),n=i+1.5*s,a=this.spectralFlux.length>=3&&t>this.spectralFlux[this.spectralFlux.length-2]&&t>this.spectralFlux[this.spectralFlux.length-3];return t>n&&a}updateBPMEstimate(){if(this.beatTimes.length<4)return;const t=this.beatTimes.slice(-16),e=[];for(let o=1;o<t.length;o++)e.push(t[o]-t[o-1]);const i=this.estimateBPMFromIntervals(e);if(i>0){this.detectedBPM=.7*this.detectedBPM+.3*i;const t=e.reduce((t,e)=>t+e,0)/e.length,o=e.reduce((e,i)=>e+Math.pow(i-t,2),0)/e.length;this.confidence=Math.max(0,1-Math.sqrt(o)/t)}}estimateBPMFromIntervals(t){if(t.length<2)return 0;const e=60/(t.reduce((t,e)=>t+e,0)/t.length);return e<60?2*e:e>180?e/2:e}quantizeToNearestBeat(t){if(0===this.beatTimes.length){const e=60/this.detectedBPM;return Math.round(t/e)*e}let e=this.beatTimes[0],i=Math.abs(t-e);for(const o of this.beatTimes){const s=Math.abs(t-o);s<i&&(i=s,e=o)}return e}quantizeLoop(t,e){const i=4*(60/this.detectedBPM),o=this.quantizeToNearestBeat(t),s=(e-t)/i,n=Math.round(s);return{a:o,b:o+n*i,bars:n}}getBPMInfo(){return{bpm:Math.round(this.detectedBPM),confidence:this.confidence}}getBeatGrid(t,e){const i=60/this.detectedBPM,o=[];let s=Math.floor(t/i)*i;for(;s<=e;)s>=t&&o.push(s),s+=i;return o}pruneOldData(){const t=this.audioContext.currentTime-10;for(;this.beatTimes.length>0&&this.beatTimes[0]<t;)this.beatTimes.shift(),this.peaks.shift();this.spectralFlux.length>1e3&&(this.spectralFlux=this.spectralFlux.slice(-500))}disconnect(){this.scriptProcessor&&(this.scriptProcessor.disconnect(),this.scriptProcessor.onaudioprocess=null,this.scriptProcessor=null),this.analyser&&(this.analyser.disconnect(),this.analyser=null),this.source&&(this.source.disconnect(),this.source=null),this.peaks=[],this.beatTimes=[],this.spectralFlux=[],this.previousSpectrum=null}tap(){const t=Date.now()/1e3;if(this.tapTimes.push(t),this.tapTimes.length>8&&this.tapTimes.shift(),this.tapTimes.length<2)return 0;const e=[];for(let n=1;n<this.tapTimes.length;n++)e.push(this.tapTimes[n]-this.tapTimes[n-1]);const i=e.reduce((t,e)=>t+e,0)/e.length,o=60/i,s=e.reduce((t,e)=>t+Math.pow(e-i,2),0)/e.length;return Math.sqrt(s)<.1*i&&(this.detectedBPM=o,this.confidence=.9),o}resetTapTempo(){this.tapTimes=[]}}class s{constructor(){this.settings={looperKey:"BracketLeft",latencyCompensation:0,epsilon:50,enableHoldToDefine:!1,edgeBleed:100,metronomeEnabled:!1,clicksPerLoop:4,pointAPreTrim:0,pointAPostTrim:0,pointBPreTrim:0,pointBPostTrim:100,jogAdjustmentMs:50,guiScale:1,theme:"boss-rc1",referencePitch:440,beatDetectionSensitivity:1,enableBeatDetection:!0,quantizeMode:"auto",enableExperimentalEQ:!1,eq:{low:0,lowMid:0,mid:0,highMid:0,high:0},keyBindings:{setPointA:"BracketLeft",setPointB:"BracketRight",stopLoop:"Backslash",speedUp:"Equal",speedDown:"Minus",pitchUp:"ArrowUp",pitchDown:"ArrowDown",resetPitch:"KeyR",toggleMetronome:"KeyM",jogABack:"Comma",jogAForward:"Period",jogBBack:"Semicolon",jogBForward:"Quote"}},this.currentTheme=i("boss-rc1"),this.beatDetector=new o,this.state={pointA:null,pointB:null,isLooping:!1,activeMedia:null,lastTapTime:0,isHoldDefining:!1,holdStartTime:0,animationFrameId:null,hudElement:null,hudTimeout:null,currentUrl:window.location.href,currentSemitoneShift:0,metronomeAudio:null,metronomeBuffer:null,metronomeContext:null,lastClickTime:0,guiElement:null,isGuiVisible:!1,isDraggingKnob:null,currentPitchShift:0,currentSpeedMultiplier:1,basePitchRatio:1,baseSpeedRatio:1,isQuantized:!1,originalPointA:null,originalPointB:null,audioContext:null,sourceNode:null,eqFilters:{low:null,lowMid:null,mid:null,highMid:null,high:null}},this.musicalIntervals=[{semitones:12,name:"Original (+1 octave)",rate:2},{semitones:7,name:"Perfect 5th up",rate:1.498},{semitones:5,name:"Perfect 4th up",rate:1.335},{semitones:4,name:"Major 3rd up",rate:1.26},{semitones:3,name:"Minor 3rd up",rate:1.189},{semitones:2,name:"Major 2nd up",rate:1.122},{semitones:1,name:"Semitone up",rate:1.059},{semitones:0,name:"Original pitch",rate:1},{semitones:-1,name:"Semitone down",rate:.944},{semitones:-2,name:"Major 2nd down",rate:.891},{semitones:-3,name:"Minor 3rd down",rate:.841},{semitones:-4,name:"Major 3rd down",rate:.794},{semitones:-5,name:"Perfect 4th down",rate:.749},{semitones:-7,name:"Perfect 5th down",rate:.667},{semitones:-12,name:"Original (-1 octave)",rate:.5}],this.mutationObserver=null,this.init()}semitoneToRatio(t){return Math.pow(2,t/12)}async init(){await this.loadSettings(),this.setupEventListeners(),this.setupMutationObserver(),this.findActiveMedia(),this.createHUD(),this.createGUI()}async loadSettings(){try{const t=await chrome.storage.sync.get(this.settings);this.settings={...this.settings,...t}}catch(t){console.warn("[PunchLooper] Failed to load settings:",t)}}setupEventListeners(){document.addEventListener("keydown",this.handleKeyDown.bind(this),!0),document.addEventListener("keyup",this.handleKeyUp.bind(this),!0),chrome.runtime.onMessage.addListener((t,e,i)=>("showGUI"===t.action&&(this.state.isGuiVisible||this.toggleGUI(),i({success:!0})),!0)),chrome.storage.onChanged.addListener((t,e)=>{if("sync"===e)for(const i in t)i in this.settings&&(this.settings[i]=t[i].newValue)})}setupMutationObserver(){this.mutationObserver=new MutationObserver(t=>{let e=!1;window.location.href!==this.state.currentUrl&&(this.state.currentUrl=window.location.href,this.resetLoop(),e=!0,this.showHUD("Navigation detected - resetting",1e3));for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)if(t.nodeType===Node.ELEMENT_NODE){const i=t;("VIDEO"===i.tagName||"AUDIO"===i.tagName||i.querySelector("video, audio"))&&(e=!0)}e&&this.findActiveMedia()}),this.mutationObserver.observe(document.body,{childList:!0,subtree:!0})}findActiveMedia(){const t=document.querySelectorAll("video, audio");if(0===t.length)return this.state.activeMedia=null,void this.cleanupAudioProcessing();let e=null,i=-1;for(const o of t){let t=0;o.paused||o.ended||(t+=1e3);const s=o.getBoundingClientRect();s.width>0&&s.height>0&&(t+=s.width*s.height),o.duration&&!isNaN(o.duration)&&(t+=100),t>i&&(i=t,e=o)}e!==this.state.activeMedia&&(this.cleanupAudioProcessing(),this.state.activeMedia=e,this.resetLoop(),this.state.activeMedia&&this.initializeNativeAudioControls())}handleKeyDown(t){console.log("Key pressed:",t.code,"ignored?",this.shouldIgnoreEvent(t)),this.shouldIgnoreEvent(t)||(console.log("Processing key:",t.code),t.code===this.settings.keyBindings.setPointA?(console.log("Set Point A key detected"),t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.setPointA()):t.code===this.settings.keyBindings.setPointB?(console.log("Set Point B key detected"),t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.setPointB(),null!==this.state.pointA&&null!==this.state.pointB&&this.startLoop()):t.code===this.settings.keyBindings.stopLoop?(console.log("Stop loop key detected"),t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.state.isLooping?this.resetLoop():console.log("Not looping, ignoring stop key")):t.code===this.settings.keyBindings.speedUp&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPlaybackRate(.01)):t.code===this.settings.keyBindings.speedDown&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPlaybackRate(-.01)):t.code===this.settings.keyBindings.toggleMetronome&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.toggleMetronome()):t.code===this.settings.keyBindings.pitchUp&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPitch(1)):t.code===this.settings.keyBindings.pitchDown&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPitch(-1)):t.code===this.settings.keyBindings.resetPitch&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.resetPlaybackSettings()):t.code===this.settings.keyBindings.jogABack&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustLoopEdge("A","back")):t.code===this.settings.keyBindings.jogAForward&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustLoopEdge("A","forward")):t.code===this.settings.keyBindings.jogBBack&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustLoopEdge("B","back")):t.code===this.settings.keyBindings.jogBForward&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustLoopEdge("B","forward")):"KeyE"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.toggleAudioEngine()):"ArrowLeft"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPitch(-1)):"ArrowRight"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.adjustPitch(1)):"KeyG"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.toggleGUI()):"KeyD"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.doubleLoopLength()):"KeyH"===t.code&&t.shiftKey?(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.halfLoopLength()):"KeyQ"===t.code&&t.shiftKey&&(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),this.quantizeLoop()))}handleKeyUp(t){}shouldIgnoreEvent(t){const e=t.target;if("INPUT"===e.tagName||"TEXTAREA"===e.tagName||"SELECT"===e.tagName)return!0;if(e.isContentEditable)return!0;const i=document.activeElement;return!(!i||!i.closest('[role="dialog"], [role="modal"]'))}setPointA(){if(!this.state.activeMedia)return void this.showHUD("No media found",1e3);let t=this.state.activeMedia.currentTime+this.settings.pointAPreTrim/1e3;t=Math.max(0,t),this.state.pointA=t;const e=this.formatTime(this.state.pointA);this.showHUD(`A @ ${e}`,700)}setPointB(){if(!this.state.activeMedia||null===this.state.pointA)return;let t=this.state.activeMedia.currentTime+this.settings.pointBPreTrim/1e3;t=Math.max(0,t),t+=this.settings.pointBPostTrim/1e3,t=Math.max(0,t),this.state.pointB=t,console.log("Loop length:",this.state.pointB-this.state.pointA,"seconds"),this.state.pointB<=this.state.pointA-.5&&this.showHUD("⚠ Overlapped loop (B before A)",1e3);const e=this.formatTime(this.state.pointB),i=this.formatTime(this.state.pointB-this.state.pointA);this.showHUD(`B @ ${e} (len=${i})`,700),this.startLoop()}startLoop(){if(!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return;this.state.isLooping=!0,this.startLoopEngine();const t=this.formatTime(this.state.pointB-this.state.pointA);this.showHUD(`▶ Loop [A→B] (${t})`,1e3),this.setPitchPreservation(!0),this.updateGUILEDs()}stopLoop(){this.state.isLooping=!1,this.state.animationFrameId&&(cancelAnimationFrame(this.state.animationFrameId),this.state.animationFrameId=null),this.showHUD("⏸ Loop stopped",700),this.updateGUILEDs()}resetLoop(){if(this.stopLoop(),this.state.pointA=null,this.state.pointB=null,this.state.isQuantized){this.state.isQuantized=!1,this.state.originalPointA=null,this.state.originalPointB=null;const t=this.state.guiElement?.querySelector("#quantize-loop rect");t&&t.setAttribute("fill","#0a4a0a")}this.updateGUILEDs()}clearPoints(){this.resetLoop(),this.showHUD("A/B cleared",700)}startLoopEngine(){if(!this.state.isLooping)return;const t=()=>{if(!this.state.isLooping||!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return;const e=this.state.activeMedia.currentTime,i=this.state.pointB-this.state.pointA;console.log(`Current: ${e.toFixed(3)}, A: ${this.state.pointA.toFixed(3)}, B: ${this.state.pointB.toFixed(3)}, Length: ${i.toFixed(3)}`),this.settings.metronomeEnabled&&this.settings.clicksPerLoop>0&&this.handleMetronomeClick(e,i);const o=this.settings.edgeBleed/1e3,s=this.state.pointB-o,n=this.state.pointA;if(e>=s){console.log(`Loop boundary hit: ${e.toFixed(3)} -> A (${n.toFixed(3)})`);const t=n-this.settings.latencyCompensation/1e3;this.state.activeMedia.currentTime=Math.max(0,t),this.state.activeMedia.paused&&(console.log("Video was paused, resuming playback"),this.state.activeMedia.play().catch(t=>{console.warn("Failed to resume playback:",t)}))}this.updateDisplayText(),this.state.animationFrameId=requestAnimationFrame(t)};this.state.animationFrameId=requestAnimationFrame(t)}adjustPlaybackRate(t){if(!this.state.activeMedia)return;this.state.currentSpeedMultiplier=Math.max(.5,Math.min(1.5,this.state.currentSpeedMultiplier+t)),this.state.activeMedia.preservesPitch=!0,this.state.activeMedia.playbackRate=this.state.currentSpeedMultiplier;const e=Math.round(100*this.state.currentSpeedMultiplier);this.showHUD(`Speed: ${e}% (×${this.state.currentSpeedMultiplier.toFixed(2)})`,1e3),this.showParameterChange(`TEMPO: ${e}%`),this.updateDisplayText(),this.updateKnobRotation("speed"),this.updateGUILEDs()}setPitchPreservation(t){if(!this.state.activeMedia)return;const e=this.state.activeMedia;"preservesPitch"in e?e.preservesPitch=t:"mozPreservesPitch"in e?e.mozPreservesPitch=t:"webkitPreservesPitch"in e&&(e.webkitPreservesPitch=t)}adjustPitch(t){if(!this.state.activeMedia)return;this.state.currentPitchShift=Math.max(-6,Math.min(6,this.state.currentPitchShift+t)),this.applyPitchShift(),this.updatePitchDisplay();const e=this.state.currentPitchShift>0?"+":"";this.showParameterChange(`PITCH: ${e}${this.state.currentPitchShift} ST`),this.updateDisplayText()}updatePitchDisplay(){if(!this.state.guiElement)return;const t=this.state.guiElement.querySelector("#pitch-display");if(t){const e=this.state.currentPitchShift;if(0===e)t.textContent="0ST",t.setAttribute("fill","#888");else{const i=e>0?"+":"";t.textContent=`${i}${e}ST`,t.setAttribute("fill",e>0?"#0a0":"#a00")}}}adjustPitchSmooth(t){if(!this.state.activeMedia)return;let e=this.state.currentPitchShift+t;e=Math.max(-6,Math.min(6,e));const i=Math.round(e);this.state.currentPitchShift=i,this.applyPitchShift()}applyPitchShift(){if(!this.state.activeMedia)return;const t=this.semitoneToRatio(this.state.currentPitchShift);this.state.activeMedia.preservesPitch=!1;const e=t*this.state.currentSpeedMultiplier;this.state.activeMedia.playbackRate=e;const i=this.getPitchShiftName(this.state.currentPitchShift);this.showHUD(`Pitch: ${i}`,1e3),this.updateKnobRotation("pitch"),this.updateGUILEDs()}getPitchShiftName(t){if(0===t)return"Original pitch";const e=t>0?"up":"down",i=Math.abs(t),o=Math.floor(i/12),s=i%12;let n="";return o>0&&(n+=`${o} octave${o>1?"s":""} `),s>0&&(n+=`${s} semitone${s>1?"s":""} `),n.trim()+` ${e}`}getIntervalForSemitones(t){return this.musicalIntervals.find(e=>e.semitones===t)||{semitones:0,name:"Original pitch",rate:1}}toggleAudioEngine(){this.showHUD("Using musical intervals for natural pitch/speed",1200)}resetPlaybackSettings(){this.state.activeMedia&&(this.state.currentSemitoneShift=0,this.state.currentPitchShift=0,this.state.currentSpeedMultiplier=1,this.state.activeMedia.playbackRate=1,this.state.activeMedia.preservesPitch=!0,this.showHUD("Pitch and speed reset to original",700),console.log("[PunchLooper] Playback settings reset to defaults"),this.updatePitchDisplay(),this.updateKnobRotation("pitch"),this.updateKnobRotation("speed"),this.updateDisplayText(),this.updateGUILEDs())}toggleMetronome(){this.settings.metronomeEnabled=!this.settings.metronomeEnabled,chrome.storage.sync.set({metronomeEnabled:this.settings.metronomeEnabled}),this.settings.metronomeEnabled?(this.initMetronome(),this.showHUD(`Metronome ON (${this.settings.clicksPerLoop} clicks/loop)`,1e3)):this.showHUD("Metronome OFF",700)}initMetronome(){if(this.state.metronomeBuffer&&this.state.metronomeContext)return;try{this.state.metronomeContext=new(window.AudioContext||window.webkitAudioContext);const t=this.state.metronomeContext.sampleRate,e=t*.05,i=this.state.metronomeContext.createBuffer(1,e,t),o=i.getChannelData(0);for(let s=0;s<e;s++){const e=Math.exp(-s/(.01*t)),i=1200;o[s]=Math.sin(2*Math.PI*i*s/t)*e*.8}return this.state.metronomeBuffer=i,void console.log("[PunchLooper] Metronome initialized with Web Audio API")}catch(s){console.warn("Failed to initialize Web Audio metronome, falling back to HTMLAudioElement:",s)}this.state.metronomeAudio=new Audio,this.state.metronomeAudio.volume=.5;const t=new(window.AudioContext||window.webkitAudioContext),e=t.sampleRate,i=.1*e,o=t.createBuffer(1,i,e).getChannelData(0);for(let n=0;n<i;n++)o[n]=Math.sin(2*Math.PI*800*n/e)*Math.exp(-n/(.05*e));this.state.metronomeAudio.src="data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmMcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp66hVFApGn+DyvmQcBjiR1/LNeSsFJHfH8N2QQAoUXrTp"}handleMetronomeClick(t,e){if(!this.state.activeMedia||!this.state.metronomeAudio&&!this.state.metronomeBuffer||null===this.state.pointA||null===this.state.pointB)return;const i=(t-this.state.pointA)/e%1,o=1/this.settings.clicksPerLoop,s=Math.floor(i/o),n=this.state.pointA+(s+1)*o*e,a=t-this.state.lastClickTime;n-t<=.05&&a>.1&&(this.playMetronomeClick(0===s),this.state.lastClickTime=t)}playMetronomeClick(t){if(this.state.metronomeContext&&this.state.metronomeBuffer)try{const e=this.state.metronomeContext.createBufferSource(),i=this.state.metronomeContext.createGain();return e.buffer=this.state.metronomeBuffer,i.gain.value=t?.8:.5,e.connect(i),i.connect(this.state.metronomeContext.destination),void e.start(0)}catch(e){console.warn("Web Audio metronome click failed:",e)}if(this.state.metronomeAudio)try{this.state.metronomeAudio.currentTime=0,this.state.metronomeAudio.volume=t?.6:.4,this.state.metronomeAudio.play().catch(t=>{console.warn("Metronome click failed:",t)})}catch(e){console.warn("Error playing metronome click:",e)}}adjustLoopEdge(t,e){if(!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return void this.showHUD("No loop points set",700);const i=("forward"===e?1:-1)*(this.settings.jogAdjustmentMs/1e3);if("A"===t){const t=Math.max(0,this.state.pointA+i);t<this.state.pointB?(this.state.pointA=t,this.showHUD(`Point A: ${this.state.pointA.toFixed(2)}s`,700)):this.showHUD("Point A cannot pass point B",700)}else{const t=Math.max(0,this.state.pointB+i),e=this.state.activeMedia.duration||Number.MAX_SAFE_INTEGER;t>this.state.pointA&&t<=e?(this.state.pointB=t,this.showHUD(`Point B: ${this.state.pointB.toFixed(2)}s`,700)):this.showHUD("Point B out of bounds",700)}}doubleLoopLength(){if(!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return void this.showHUD("No loop set",700);const t=this.state.pointB-this.state.pointA,e=this.state.pointA+2*t;if(e<=(this.state.activeMedia.duration||Number.MAX_SAFE_INTEGER)){this.state.pointB=e;const t=this.formatTime(e-this.state.pointA);this.showHUD(`Loop 2x → ${t}`,1e3),this.updateGUILEDs()}else this.showHUD("Cannot double - exceeds media length",700)}halfLoopLength(){if(!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return void this.showHUD("No loop set",700);const t=this.state.pointB-this.state.pointA;if(t/2>=.1){this.state.pointB=this.state.pointA+t/2;const e=this.formatTime(this.state.pointB-this.state.pointA);this.showHUD(`Loop ½x → ${e}`,1e3),this.updateGUILEDs()}else this.showHUD("Cannot halve - loop too short",700)}quantizeLoop(){if(!this.state.activeMedia||null===this.state.pointA||null===this.state.pointB)return void this.showHUD("No loop set",700);if(this.state.isQuantized){null!==this.state.originalPointA&&null!==this.state.originalPointB&&(this.state.pointA=this.state.originalPointA,this.state.pointB=this.state.originalPointB,null!==this.state.loopA&&null!==this.state.loopB&&(this.state.loopA=this.state.originalPointA,this.state.loopB=this.state.originalPointB)),this.state.isQuantized=!1,this.state.originalPointA=null,this.state.originalPointB=null,this.showHUD("Quantize OFF - Original loop restored",1e3);const t=this.state.guiElement?.querySelector("#quantize-loop rect");return t&&t.setAttribute("fill","#0a4a0a"),void this.updateGUILEDs()}this.state.originalPointA=this.state.pointA,this.state.originalPointB=this.state.pointB;const t=.1,e=Math.round(this.state.pointA/t)*t,i=Math.round(this.state.pointB/t)*t,o=this.state.activeMedia.duration||Number.MAX_SAFE_INTEGER;if(i<=o&&e>=0&&i>e){this.state.pointA=Math.max(0,e),this.state.pointB=Math.min(o,i),this.state.isQuantized=!0,this.showHUD("Quantized ON - Snapped to clean boundaries",1200);const t=this.state.guiElement?.querySelector("#quantize-loop rect");t&&t.setAttribute("fill","#0f0"),this.updateGUILEDs()}else this.state.originalPointA=null,this.state.originalPointB=null,this.showHUD("Cannot quantize - invalid boundaries",700)}createHUD(){console.log("createHUD called");const t=document.createElement("div");t.id="punch-looper-hud-container",t.style.cssText="\n      position: fixed !important;\n      top: 20px !important;\n      right: 20px !important;\n      background: rgba(20, 20, 20, 0.95) !important;\n      border: 1px solid rgba(255, 255, 255, 0.1) !important;\n      border-radius: 8px !important;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n      z-index: 2147483647 !important;\n      opacity: 0 !important;\n      transition: opacity 0.2s ease-out !important;\n      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5) !important;\n      backdrop-filter: blur(10px) !important;\n      min-width: 220px !important;\n      user-select: none !important;\n    ";const e=document.createElement("div");e.style.cssText="\n      display: flex !important;\n      align-items: center !important;\n      justify-content: space-between !important;\n      padding: 6px 10px !important;\n      background: rgba(30, 30, 30, 0.8) !important;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;\n      border-radius: 8px 8px 0 0 !important;\n      cursor: move !important;\n    ";const i=document.createElement("div");i.className="title-content",i.style.cssText="\n      display: flex !important;\n      align-items: center !important;\n      gap: 8px !important;\n      flex: 1 !important;\n    ";const o=document.createElement("span");o.textContent="YT Looper",o.style.cssText="\n      color: #999 !important;\n      font-size: 11px !important;\n      font-weight: 600 !important;\n      letter-spacing: 0.5px !important;\n    ";const s=document.createElement("button");s.innerHTML="⚙",s.style.cssText="\n      background: none !important;\n      border: none !important;\n      color: #666 !important;\n      cursor: pointer !important;\n      padding: 0 4px !important;\n      font-size: 14px !important;\n      transition: color 0.2s !important;\n    ",s.onmouseover=()=>s.style.color="#fff !important",s.onmouseout=()=>s.style.color="#666 !important",s.onclick=t=>{t.stopPropagation(),this.showSettingsModal()},i.appendChild(o),i.appendChild(s);const n=document.createElement("button");n.innerHTML="×",n.style.cssText="\n      background: none !important;\n      border: none !important;\n      color: #666 !important;\n      cursor: pointer !important;\n      padding: 0 4px !important;\n      font-size: 20px !important;\n      line-height: 1 !important;\n      transition: color 0.2s !important;\n    ",n.onmouseover=()=>n.style.color="#ff4444 !important",n.onmouseout=()=>n.style.color="#666 !important",n.onclick=t=>{t.stopPropagation(),this.hideHUD()},e.appendChild(i),e.appendChild(n);const a=document.createElement("div");a.id="punch-looper-hud",a.style.cssText="\n      padding: 10px 14px !important;\n      color: #fff !important;\n      font-size: 13px !important;\n      font-weight: 500 !important;\n      min-height: 20px !important;\n      white-space: nowrap !important;\n    ",t.appendChild(e),t.appendChild(a),document.body.appendChild(t),this.state.hudElement=a,this.makeDraggable(t,e),console.log("HUD created and added to DOM")}makeDraggable(t,e){let i=!1,o=0,s=0,n=0,a=0;const r=e=>{i&&(e.preventDefault(),e.stopPropagation(),o=e.clientX-n,s=e.clientY-a,t.style.transform=`translate(${o}px, ${s}px)`)},l=()=>{i&&(i=!1,document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",l))};e.addEventListener("mousedown",t=>{const c=t.target;(c===e||"SPAN"===c.tagName&&c.closest(".title-content"))&&(n=t.clientX-o,a=t.clientY-s,i=!0,document.addEventListener("mousemove",r),document.addEventListener("mouseup",l),t.preventDefault(),t.stopPropagation())})}showHUD(t,e){if(console.log("showHUD called:",t,"duration:",e),this.state.guiElement&&this.state.isGuiVisible){const i=this.state.guiElement.querySelector("#time-display");i&&(i.textContent=t,this.state.hudTimeout&&clearTimeout(this.state.hudTimeout),e>0&&(this.state.hudTimeout=window.setTimeout(()=>{if(this.state.guiElement&&this.state.isGuiVisible){const t=this.state.guiElement.querySelector("#time-display");t&&this.state.activeMedia&&(t.textContent=this.formatTime(this.state.activeMedia.currentTime))}},e)))}else console.log("GUI not visible, message:",t)}showSettingsModal(){const t=document.createElement("div");t.id="punch-looper-settings-backdrop",t.style.cssText="\n      position: fixed !important;\n      top: 0 !important;\n      left: 0 !important;\n      width: 100vw !important;\n      height: 100vh !important;\n      background: rgba(0, 0, 0, 0.7) !important;\n      z-index: 2147483647 !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n    ";const o=document.createElement("div");o.style.cssText="\n      background: #2a2a2a !important;\n      border-radius: 12px !important;\n      padding: 24px !important;\n      width: 500px !important;\n      max-width: 90vw !important;\n      max-height: 80vh !important;\n      overflow-y: auto !important;\n      box-shadow: 0 20px 40px rgba(0,0,0,0.5) !important;\n      color: white !important;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n    ";const s=Object.entries(e).map(([t,e])=>`<option value="${t}" ${this.settings.theme===t?"selected":""}>${e.name}</option>`).join("");o.innerHTML=`\n      <div id="modal-header" style="\n        display: flex; \n        align-items: center; \n        justify-content: space-between;\n        margin-bottom: 20px; \n        padding: 8px 12px;\n        background: #1a1a1a;\n        border-radius: 8px 8px 0 0;\n        margin: -24px -24px 20px -24px;\n        cursor: move;\n        user-select: none;\n      ">\n        <h2 style="color: #ccc; margin: 0; font-size: 20px;">YT Looper Settings</h2>\n        <button id="close-settings" style="\n          background: none; \n          border: none; \n          color: #ccc; \n          font-size: 20px; \n          cursor: pointer; \n          padding: 4px 8px;\n          border-radius: 4px;\n          transition: background-color 0.2s, color 0.2s;\n        " onmouseover="this.style.backgroundColor='#777'; this.style.color='white';" \n           onmouseout="this.style.backgroundColor='transparent'; this.style.color='#ccc';">&times;</button>\n      </div>\n      \n      \x3c!-- Theme Selection --\x3e\n      <div style="margin-bottom: 20px;">\n        <label style="display: block; margin-bottom: 8px; font-size: 14px; font-weight: 500; color: #ccc;">Pedal Theme</label>\n        <select id="theme-select" style="\n          width: 100%;\n          padding: 10px;\n          background: #333;\n          border: 1px solid #555;\n          color: #fff;\n          border-radius: 6px;\n          font-size: 14px;\n          cursor: pointer;\n        ">\n          ${s}\n        </select>\n        <div style="margin-top: 8px; font-size: 11px; color: #888;">\n          Choose from classic pedal designs: Boss, Strymon, Empress, EHX, TC Ditto\n        </div>\n      </div>\n      \n      <div style="margin-bottom: 16px;">\n        <label style="display: block; margin-bottom: 8px; color: #ccc; font-size: 14px;">Loop Timing Compensation</label>\n        <input type="range" id="latency-slider" min="-100" max="100" value="${this.settings.latencyCompensation}" \n               style="width: 100%; margin-bottom: 8px;">\n        <div style="display: flex; justify-content: space-between; color: #888; font-size: 12px;">\n          <span style="flex: 1; text-align: left;">Pre-loop<br>-100ms</span>\n          <span id="latency-value" style="flex: 1; text-align: center; font-weight: bold; color: #fff;">${this.settings.latencyCompensation>0?"+":""}${this.settings.latencyCompensation}ms</span>\n          <span style="flex: 1; text-align: right;">Post-loop<br>+100ms</span>\n        </div>\n        <p style="color: #999; font-size: 12px; margin: 8px 0 0 0;">\n          <strong>0</strong> = keypress at exact loop point<br>\n          <strong>Negative</strong> = compensate for early keypresses<br>  \n          <strong>Positive</strong> = compensate for late keypresses\n        </p>\n      </div>\n\n      <div style="margin-bottom: 16px;">\n        <label style="display: block; margin-bottom: 8px; color: #ccc; font-size: 14px;">Loop Overlap (ms)</label>\n        <input type="range" id="bleed-slider" min="0" max="300" value="${this.settings.edgeBleed}" \n               style="width: 100%; margin-bottom: 8px;">\n        <div style="display: flex; justify-content: space-between; color: #888; font-size: 12px;">\n          <span>0ms</span>\n          <span id="bleed-value">${this.settings.edgeBleed}ms</span>\n          <span>300ms</span>\n        </div>\n        <p id="bleed-description" style="color: #999; font-size: 12px; margin: 8px 0 0 0;">\n          Loops back <strong>${this.settings.edgeBleed}ms early</strong> to eliminate gaps.<br>\n          Higher values = tighter loops with more overlap.\n        </p>\n      </div>\n\n      <div style="margin-bottom: 16px;">\n        <label style="display: flex; align-items: center; gap: 8px; color: #ccc; font-size: 14px; cursor: pointer;">\n          <input type="checkbox" id="experimental-eq-enabled" ${this.settings.enableExperimentalEQ?"checked":""} \n                 style="transform: scale(1.2);">\n          <span>Enable Experimental EQ</span>\n        </label>\n        <p style="color: #888; font-size: 12px; margin: 8px 0 0 28px; line-height: 1.4;">\n          ⚠️ Web Audio API based 5-band equalizer. May cause audio processing issues or button conflicts.\n        </p>\n      </div>\n\n      <div style="margin-bottom: 24px;">\n        <h3 style="color: #ccc; margin: 0 0 16px 0; font-size: 16px;">5-Band EQ</h3>\n        \n        <div style="display: flex; justify-content: space-evenly; gap: 8px; padding: 0 4px;">\n          \x3c!-- Low Band (60Hz) --\x3e\n          <div style="display: flex; flex-direction: column; align-items: center; width: 60px;">\n            <div style="color: #888; font-size: 9px; margin-bottom: 2px;">+12</div>\n            <input type="range" id="eq-low-slider" min="-12" max="12" value="${this.settings.eq.low}" step="0.5"\n                   orient="vertical" style="writing-mode: bt-lr; -webkit-appearance: slider-vertical; width: 16px; height: 100px; background: #333;">\n            <div style="color: #888; font-size: 9px; margin-top: 2px;">-12</div>\n            <div id="eq-low-value" style="color: #0f0; font-size: 10px; font-weight: bold; margin-top: 6px; min-height: 14px;">${this.settings.eq.low>0?"+":""}${this.settings.eq.low}dB</div>\n            <div style="color: #ccc; font-size: 10px; font-weight: bold; margin-top: 4px; text-align: center; line-height: 1.1;">LOW<br><span style="font-size: 8px; color: #888;">60Hz</span></div>\n          </div>\n          \n          \x3c!-- Low-Mid Band (250Hz) --\x3e\n          <div style="display: flex; flex-direction: column; align-items: center; width: 60px;">\n            <div style="color: #888; font-size: 9px; margin-bottom: 2px;">+12</div>\n            <input type="range" id="eq-lowmid-slider" min="-12" max="12" value="${this.settings.eq.lowMid}" step="0.5"\n                   orient="vertical" style="writing-mode: bt-lr; -webkit-appearance: slider-vertical; width: 16px; height: 100px; background: #333;">\n            <div style="color: #888; font-size: 9px; margin-top: 2px;">-12</div>\n            <div id="eq-lowmid-value" style="color: #0f0; font-size: 10px; font-weight: bold; margin-top: 6px; min-height: 14px;">${this.settings.eq.lowMid>0?"+":""}${this.settings.eq.lowMid}dB</div>\n            <div style="color: #ccc; font-size: 10px; font-weight: bold; margin-top: 4px; text-align: center; line-height: 1.1;">L-MID<br><span style="font-size: 8px; color: #888;">250Hz</span></div>\n          </div>\n          \n          \x3c!-- Mid Band (1kHz) --\x3e\n          <div style="display: flex; flex-direction: column; align-items: center; width: 60px;">\n            <div style="color: #888; font-size: 9px; margin-bottom: 2px;">+12</div>\n            <input type="range" id="eq-mid-slider" min="-12" max="12" value="${this.settings.eq.mid}" step="0.5"\n                   orient="vertical" style="writing-mode: bt-lr; -webkit-appearance: slider-vertical; width: 16px; height: 100px; background: #333;">\n            <div style="color: #888; font-size: 9px; margin-top: 2px;">-12</div>\n            <div id="eq-mid-value" style="color: #0f0; font-size: 10px; font-weight: bold; margin-top: 6px; min-height: 14px;">${this.settings.eq.mid>0?"+":""}${this.settings.eq.mid}dB</div>\n            <div style="color: #ccc; font-size: 10px; font-weight: bold; margin-top: 4px; text-align: center; line-height: 1.1;">MID<br><span style="font-size: 8px; color: #888;">1kHz</span></div>\n          </div>\n          \n          \x3c!-- High-Mid Band (4kHz) --\x3e\n          <div style="display: flex; flex-direction: column; align-items: center; width: 60px;">\n            <div style="color: #888; font-size: 9px; margin-bottom: 2px;">+12</div>\n            <input type="range" id="eq-highmid-slider" min="-12" max="12" value="${this.settings.eq.highMid}" step="0.5"\n                   orient="vertical" style="writing-mode: bt-lr; -webkit-appearance: slider-vertical; width: 16px; height: 100px; background: #333;">\n            <div style="color: #888; font-size: 9px; margin-top: 2px;">-12</div>\n            <div id="eq-highmid-value" style="color: #0f0; font-size: 10px; font-weight: bold; margin-top: 6px; min-height: 14px;">${this.settings.eq.highMid>0?"+":""}${this.settings.eq.highMid}dB</div>\n            <div style="color: #ccc; font-size: 10px; font-weight: bold; margin-top: 4px; text-align: center; line-height: 1.1;">H-MID<br><span style="font-size: 8px; color: #888;">4kHz</span></div>\n          </div>\n          \n          \x3c!-- High Band (12kHz) --\x3e\n          <div style="display: flex; flex-direction: column; align-items: center; width: 60px;">\n            <div style="color: #888; font-size: 9px; margin-bottom: 2px;">+12</div>\n            <input type="range" id="eq-high-slider" min="-12" max="12" value="${this.settings.eq.high}" step="0.5"\n                   orient="vertical" style="writing-mode: bt-lr; -webkit-appearance: slider-vertical; width: 16px; height: 100px; background: #333;">\n            <div style="color: #888; font-size: 9px; margin-top: 2px;">-12</div>\n            <div id="eq-high-value" style="color: #0f0; font-size: 10px; font-weight: bold; margin-top: 6px; min-height: 14px;">${this.settings.eq.high>0?"+":""}${this.settings.eq.high}dB</div>\n            <div style="color: #ccc; font-size: 10px; font-weight: bold; margin-top: 4px; text-align: center; line-height: 1.1;">HIGH<br><span style="font-size: 8px; color: #888;">12kHz</span></div>\n          </div>\n        </div>\n      </div>\n\n      <div style="margin-bottom: 16px;">\n        <h3 style="color: #ccc; margin: 0 0 12px 0; font-size: 16px;">Pitch Control</h3>\n        <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px;">\n          <button id="pitch-down-modal" style="background: #444; color: #fff; border: 1px solid #666; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-size: 14px;">▼ -1</button>\n          <span style="color: #ccc; font-size: 14px; min-width: 100px; text-align: center;" id="pitch-display-modal">Original (0)</span>\n          <button id="pitch-up-modal" style="background: #444; color: #fff; border: 1px solid #666; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-size: 14px;">+1 ▲</button>\n          <button id="pitch-reset-modal" style="background: #666; color: #fff; border: 1px solid #888; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-size: 12px;">Reset</button>\n        </div>\n        <p style="color: #888; font-size: 12px; margin: 0; line-height: 1.4;">\n          Adjust pitch in semitone steps. Range: -6 to +6 semitones.\n        </p>\n      </div>\n\n      <div style="margin-bottom: 16px;">\n        <h3 style="color: #ccc; margin: 0 0 12px 0; font-size: 16px;">Metronome</h3>\n        <label style="display: flex; align-items: center; gap: 8px; color: #ccc; font-size: 14px; cursor: pointer; margin-bottom: 12px;">\n          <input type="checkbox" id="metronome-enabled" ${this.settings.metronomeEnabled?"checked":""} \n                 style="transform: scale(1.2);">\n          <span>Enable Metronome</span>\n        </label>\n        \n        <div style="margin-bottom: 12px;">\n          <label style="display: block; margin-bottom: 8px; color: #ccc; font-size: 14px;">Clicks Per Loop</label>\n          <input type="range" id="clicks-slider" min="1" max="16" value="${this.settings.clicksPerLoop}" \n                 style="width: 100%; margin-bottom: 8px;">\n          <div style="display: flex; justify-content: space-between; color: #888; font-size: 12px;">\n            <span>1</span>\n            <span id="clicks-value">${this.settings.clicksPerLoop}</span>\n            <span>16</span>\n          </div>\n          <p style="color: #999; font-size: 12px; margin: 8px 0 0 0;">Number of metronome clicks per loop cycle.</p>\n        </div>\n      </div>\n\n      <div style="margin-bottom: 20px;">\n        <h3 style="color: #ccc; margin: 0 0 12px 0; font-size: 16px;">Keyboard Shortcuts</h3>\n        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; font-size: 12px;">\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Set Point A:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.setPointA)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Set Point B:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.setPointB)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Stop Loop:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.stopLoop)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Toggle GUI:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">Shift+G</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Speed Up:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.speedUp)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Speed Down:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.speedDown)}</kbd>\n          </div>\n          ${this.settings.experimentalPitch?`\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Pitch Up:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">Shift+${this.getReadableKeyName(this.settings.keyBindings.pitchUp)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Pitch Down:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">Shift+${this.getReadableKeyName(this.settings.keyBindings.pitchDown)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Reset Pitch:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">Shift+${this.getReadableKeyName(this.settings.keyBindings.resetPitch)}</kbd>\n          </div>\n          `:""}\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>A Jog Back:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.jogABack)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>A Jog Forward:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.jogAForward)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>B Jog Back:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.jogBBack)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>B Jog Forward:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.jogBForward)}</kbd>\n          </div>\n          <div style="display: flex; justify-content: space-between; color: #ccc;">\n            <span>Toggle Metronome:</span>\n            <kbd style="background: #444; padding: 2px 6px; border-radius: 3px; font-family: monospace;">${this.getReadableKeyName(this.settings.keyBindings.toggleMetronome)}</kbd>\n          </div>\n        </div>\n      </div>\n\n      \x3c!-- Support Section --\x3e\n      <div style="margin-top: 20px; padding: 16px; background: #1a1a1a; border-radius: 8px; border: 1px solid #333;">\n        <h3 style="color: #fff; margin: 0 0 12px 0; font-size: 14px; display: flex; align-items: center; gap: 8px;">\n          ❤️ Support YT Looper\n        </h3>\n        <p style="color: #ccc; font-size: 13px; margin: 0 0 12px 0; line-height: 1.4;">\n          If you find YT Looper useful, consider supporting development to keep it free and add new features!\n        </p>\n        <a href="https://buy.stripe.com/00w9AT4q30dtby3aqtdIA04" target="_blank" rel="noopener" \n           style="display: inline-block; padding: 8px 16px; background: linear-gradient(45deg, #635bff, #ff6b6b); \n                  color: white; text-decoration: none; border-radius: 6px; font-size: 13px; font-weight: bold;\n                  transition: opacity 0.2s;">\n          💖 Donate via Stripe\n        </a>\n      </div>\n\n      <div style="display: flex; gap: 12px; margin-top: 24px;">\n        <button id="reset-settings" style="flex: 1; padding: 10px; background: #444; color: white; border: none; border-radius: 6px; cursor: pointer;">Reset Defaults</button>\n        <button id="save-settings" style="flex: 1; padding: 10px; background: #666; color: white; border: none; border-radius: 6px; cursor: pointer;">Save</button>\n      </div>\n    `,t.appendChild(o),document.body.appendChild(t);const n=o.querySelector("#theme-select");n&&n.addEventListener("change",()=>{if(this.settings.theme=n.value,this.currentTheme=i(n.value),chrome.storage.sync.set({theme:n.value}),this.state.guiElement){const t=this.state.isGuiVisible;document.body.removeChild(this.state.guiElement),this.createGUI(),t&&this.toggleGUI()}});const a=o.querySelector("#latency-slider"),r=o.querySelector("#latency-value"),l=o.querySelector("#bleed-slider"),c=o.querySelector("#bleed-value"),d=o.querySelector("#jog-slider"),h=o.querySelector("#jog-value"),p=o.querySelector("#metronome-enabled"),u=o.querySelector("#clicks-slider"),f=o.querySelector("#clicks-value"),m=o.querySelector("#experimental-eq-enabled"),g=o.querySelector("#pitch-down-modal"),y=o.querySelector("#pitch-up-modal"),x=o.querySelector("#pitch-reset-modal"),b=o.querySelector("#pitch-display-modal"),v=()=>{this.getCurrentInterval();const t=this.getCurrentIntervalName();b.textContent=`${t} (${this.state.currentPitchShift>0?"+":""}${this.state.currentPitchShift})`};v(),g.addEventListener("click",()=>{this.adjustPitch(-1),v()}),y.addEventListener("click",()=>{this.adjustPitch(1),v()}),x.addEventListener("click",()=>{this.resetPlaybackSettings(),v()});const w=o.querySelector("#eq-low-slider"),k=o.querySelector("#eq-low-value"),A=o.querySelector("#eq-lowmid-slider"),B=o.querySelector("#eq-lowmid-value"),P=o.querySelector("#eq-mid-slider"),M=o.querySelector("#eq-mid-value"),E=o.querySelector("#eq-highmid-slider"),S=o.querySelector("#eq-highmid-value"),D=o.querySelector("#eq-high-slider"),L=o.querySelector("#eq-high-value");a.addEventListener("input",()=>{const t=parseInt(a.value),e=t>0?"+":"";r.innerHTML=`${e}${t}ms`,r.style.color=0===t?"#fff":t<0?"#66ccff":"#ffcc66"}),l.addEventListener("input",()=>{const t=l.value;c.textContent=`${t}ms`;const e=o.querySelector("#bleed-description");e&&(e.innerHTML=`Loops back <strong>${t}ms early</strong> to eliminate gaps.<br>\n          Higher values = tighter loops with more overlap.`)}),d?.addEventListener("input",()=>{h.textContent=`${d.value}ms`}),u?.addEventListener("input",()=>{f.textContent=`${u.value}`}),w?.addEventListener("input",()=>{const t=parseFloat(w.value);k.textContent=`${t>0?"+":""}${t}dB`,this.updateEQ()}),A?.addEventListener("input",()=>{const t=parseFloat(A.value);B.textContent=`${t>0?"+":""}${t}dB`,this.updateEQ()}),P?.addEventListener("input",()=>{const t=parseFloat(P.value);M.textContent=`${t>0?"+":""}${t}dB`,this.updateEQ()}),E?.addEventListener("input",()=>{const t=parseFloat(E.value);S.textContent=`${t>0?"+":""}${t}dB`,this.updateEQ()}),D?.addEventListener("input",()=>{const t=parseFloat(D.value);L.textContent=`${t>0?"+":""}${t}dB`,this.updateEQ()});const T=()=>{t.remove()};o.querySelector("#close-settings")?.addEventListener("click",T),t.addEventListener("click",e=>{e.target===t&&T()});const C=o.querySelector("#modal-header");let F=!1,q={x:0,y:0};const H=t=>{if(!F)return;const e=t.clientX-q.x,i=t.clientY-q.y,s=window.innerWidth-o.offsetWidth,n=window.innerHeight-o.offsetHeight;o.style.left=Math.max(0,Math.min(s,e))+"px",o.style.top=Math.max(0,Math.min(n,i))+"px",t.stopPropagation()},U=()=>{F&&(F=!1,document.removeEventListener("mousemove",H),document.removeEventListener("mouseup",U))};C?.addEventListener("mousedown",t=>{if(t.target.closest("#close-settings"))return;F=!0;const e=o.getBoundingClientRect();q.x=t.clientX-e.left,q.y=t.clientY-e.top,o.style.position="fixed",o.style.top=e.top+"px",o.style.left=e.left+"px",o.style.transform="none",document.addEventListener("mousemove",H),document.addEventListener("mouseup",U),t.preventDefault(),t.stopPropagation()}),o.querySelector("#reset-settings")?.addEventListener("click",()=>{a.value="0",l.value="100",d.value="10",p.checked=!1,u.value="4",m.checked=!1,w.value="0",A.value="0",P.value="0",E.value="0",D.value="0",r.innerHTML="0ms",r.style.color="#fff",c.textContent="100ms",h.textContent="10ms",f.textContent="4",k.textContent="0dB",B.textContent="0dB",M.textContent="0dB",S.textContent="0dB",L.textContent="0dB"}),o.querySelector("#save-settings")?.addEventListener("click",async()=>{this.settings.latencyCompensation=parseInt(a.value),this.settings.edgeBleed=parseInt(l.value),this.settings.jogAdjustmentMs=parseInt(d.value),this.settings.metronomeEnabled=p.checked,this.settings.clicksPerLoop=parseInt(u.value),this.settings.enableExperimentalEQ=m.checked,this.settings.eq={low:parseFloat(w.value),lowMid:parseFloat(A.value),mid:parseFloat(P.value),highMid:parseFloat(E.value),high:parseFloat(D.value)};try{await chrome.storage.sync.set({latencyCompensation:this.settings.latencyCompensation,edgeBleed:this.settings.edgeBleed,jogAdjustmentMs:this.settings.jogAdjustmentMs,metronomeEnabled:this.settings.metronomeEnabled,clicksPerLoop:this.settings.clicksPerLoop,enableExperimentalEQ:this.settings.enableExperimentalEQ,eq:this.settings.eq}),this.showHUD("Settings saved!",2e3),this.updatePitchControlsVisibility(),T()}catch(t){console.error("Failed to save settings:",t),this.showHUD("Failed to save settings",2e3)}})}getReadableKeyName(t){return{BracketLeft:"[",BracketRight:"]",Backslash:"\\",Equal:"=",Minus:"-",ArrowUp:"↑",ArrowDown:"↓",ArrowLeft:"←",ArrowRight:"→",KeyR:"R",KeyM:"M",KeyG:"G",Comma:",",Period:".",Semicolon:";",Quote:"'",Space:"Space"}[t]||t.replace("Key","")}updatePitchControlsVisibility(){}hideHUD(){if(!this.state.hudElement)return;const t=document.getElementById("punch-looper-hud-container");t&&(t.style.opacity="0")}createGUI(){const t=document.createElement("div");t.id="punch-looper-gui";const e=this.settings.guiScale||1;t.style.cssText=`\n      position: fixed !important;\n      bottom: 20px !important;\n      right: 20px !important;\n      width: ${200*e}px !important;\n      height: ${280*e}px !important;\n      z-index: 2147483646 !important;\n      pointer-events: none !important;\n      opacity: 0 !important;\n      transform: scale(0.9) translateY(20px) !important;\n      transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) !important;\n      user-select: none !important;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n      background: transparent !important;\n      border-radius: 8px !important;\n      overflow: visible !important;\n    `,t.innerHTML=this.createPedalSVG(),this.setupGUIEventListeners(t),document.body.appendChild(t),this.state.guiElement=t,this.updatePitchDisplay(),this.updatePitchControlsVisibility()}createPedalSVG(){const t=this.currentTheme;let e="";return e=t.body.background.includes("gradient")?"Boss RC-1"===t.name?'\n            <stop offset="0%" style="stop-color:#ff3333"/>\n            <stop offset="50%" style="stop-color:#dd2222"/>\n            <stop offset="100%" style="stop-color:#aa1111"/>':"Strymon Timeline"===t.name?'\n            <stop offset="0%" style="stop-color:#4a6fa5"/>\n            <stop offset="50%" style="stop-color:#3a5f95"/>\n            <stop offset="100%" style="stop-color:#2a4f85"/>':"Empress Echosystem"===t.name?'\n            <stop offset="0%" style="stop-color:#1a3a2e"/>\n            <stop offset="50%" style="stop-color:#0f2818"/>\n            <stop offset="100%" style="stop-color:#061408"/>':"TC Ditto"===t.name?'\n            <stop offset="0%" style="stop-color:#663399"/>\n            <stop offset="50%" style="stop-color:#552288"/>\n            <stop offset="100%" style="stop-color:#441177"/>':"EHX Style"===t.name?'\n            <stop offset="0%" style="stop-color:#c0c0c0"/>\n            <stop offset="50%" style="stop-color:#a0a0a0"/>\n            <stop offset="100%" style="stop-color:#808080"/>':'\n            <stop offset="0%" style="stop-color:#ff3333"/>\n            <stop offset="50%" style="stop-color:#dd2222"/>\n            <stop offset="100%" style="stop-color:#aa1111"/>':`\n            <stop offset="0%" style="stop-color:${t.body.background}"/>\n            <stop offset="100%" style="stop-color:${t.body.background}"/>`,`\n      \n      <svg viewBox="0 0 190 300" xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%; filter: drop-shadow(${t.effects?.shadow||"0 12px 24px rgba(0,0,0,0.4)"});">\n        \x3c!-- ${t.brand} ${t.model} Style --\x3e\n        <defs>\n          \x3c!-- Dynamic body gradient based on theme --\x3e\n          <linearGradient id="bodyGradient" x1="0%" y1="0%" x2="100%" y2="100%">${e}\n          </linearGradient>\n          \x3c!-- Chrome knobs --\x3e\n          <radialGradient id="chromeKnob" cx="30%" cy="30%" r="70%">\n            <stop offset="0%" style="stop-color:#ffffff"/>\n            <stop offset="20%" style="stop-color:#f0f0f0"/>\n            <stop offset="60%" style="stop-color:#d0d0d0"/>\n            <stop offset="100%" style="stop-color:#b0b0b0"/>\n          </radialGradient>\n          \x3c!-- Multi-color LED ring --\x3e\n          <radialGradient id="ledRing" cx="50%" cy="50%" r="50%">\n            <stop offset="0%" style="stop-color:#000"/>\n            <stop offset="70%" style="stop-color:#111"/>\n            <stop offset="100%" style="stop-color:#333"/>\n          </radialGradient>\n          \x3c!-- Green active LED --\x3e\n          <radialGradient id="greenLED" cx="50%" cy="30%" r="60%">\n            <stop offset="0%" style="stop-color:#44ff44"/>\n            <stop offset="100%" style="stop-color:#00aa00"/>\n          </radialGradient>\n          \x3c!-- Red recording LED --\x3e\n          <radialGradient id="redLED" cx="50%" cy="30%" r="60%">\n            <stop offset="0%" style="stop-color:#ff4444"/>\n            <stop offset="100%" style="stop-color:#cc0000"/>\n          </radialGradient>\n          \x3c!-- Orange LED --\x3e\n          <radialGradient id="orangeLED" cx="50%" cy="30%" r="60%">\n            <stop offset="0%" style="stop-color:#ffaa44"/>\n            <stop offset="100%" style="stop-color:#cc6600"/>\n          </radialGradient>\n          \x3c!-- Amber LED --\x3e\n          <radialGradient id="amberLED" cx="50%" cy="30%" r="60%">\n            <stop offset="0%" style="stop-color:#ffcc00"/>\n            <stop offset="100%" style="stop-color:#cc9900"/>\n          </radialGradient>\n        </defs>\n        \n        \x3c!-- Main pedal body with theme colors --\x3e\n        <rect x="10" y="0" width="170" height="280" rx="${t.body.borderRadius}" ry="${t.body.borderRadius}" \n              fill="${t.body.background.includes("gradient")?"url(#bodyGradient)":t.body.background}" \n              stroke="${t.body.stroke}" stroke-width="${t.body.strokeWidth}"/>\n        \n        \x3c!-- Top control area integrated into pedal --\x3e\n        <rect x="20" y="10" width="150" height="20" rx="4" ry="4" \n              fill="${t.controlPanel.background}" \n              stroke="${t.controlPanel.stroke}" stroke-width="${t.controlPanel.strokeWidth}"/>\n        \n        \x3c!-- Hamburger menu (left) --\x3e\n        <g id="hamburger-menu" style="cursor: pointer;" class="hamburger-menu">\n          <rect x="25" y="13" width="12" height="2" fill="#ccc"/>\n          <rect x="25" y="16" width="12" height="2" fill="#ccc"/>\n          <rect x="25" y="19" width="12" height="2" fill="#ccc"/>\n          <text x="31" y="28" text-anchor="middle" fill="#888" font-size="6" font-family="Arial, sans-serif">MENU</text>\n        </g>\n        \n        \x3c!-- Close button (right) --\x3e\n        <g id="close-button" style="cursor: pointer;" class="close-button">\n          <circle cx="165" cy="18" r="6" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="165" y="21" text-anchor="middle" fill="#ccc" font-size="12" font-weight="bold" font-family="Arial, sans-serif">×</text>\n        </g>\n              \n        \x3c!-- Main branding section --\x3e\n        <rect x="20" y="35" width="150" height="40" rx="4" ry="4" \n              fill="#111" \n              stroke="#333" stroke-width="1"/>\n        \n        \x3c!-- Digital display inside black box - reorganized layout --\x3e\n        <rect x="25" y="40" width="140" height="30" rx="2" ry="2" fill="${t.display.background}" stroke="${t.display.stroke}" stroke-width="${t.display.strokeWidth}"/>\n        \n        \x3c!-- A/B times stacked on left side --\x3e\n        <text id="a-time-display" x="35" y="50" text-anchor="start" fill="${t.display.textColor}" font-size="9" font-family="${t.display.fontFamily}" font-weight="bold">A:--:--</text>\n        <text id="b-time-display" x="35" y="62" text-anchor="start" fill="${t.display.textColor}" font-size="9" font-family="${t.display.fontFamily}" font-weight="bold">B:--:--</text>\n        \n        \x3c!-- Parameter info on far right --\x3e\n        <text id="param-display" x="155" y="56" text-anchor="end" fill="${t.display.textColorDim}" font-size="8" font-family="${t.display.fontFamily}">READY</text>\n        \n        \n        \x3c!-- Status LEDs horizontally below knobs - optimized spacing --\x3e\n        <circle cx="30" cy="140" r="4" fill="${this.state.pointA?"url(#greenLED)":"#002200"}" class="led-a" stroke="#333" stroke-width="1"/>\n        <text x="30" y="152" text-anchor="middle" fill="${t.leds.labelColor}" font-size="8" font-weight="bold" font-family="${t.text.labelFont}">A</text>\n        \n        <circle cx="55" cy="140" r="4" fill="${this.state.pointB?"url(#greenLED)":"#002200"}" class="led-b" stroke="#333" stroke-width="1"/>\n        <text x="55" y="152" text-anchor="middle" fill="#fff" font-size="8" font-weight="bold" font-family="Arial, sans-serif">B</text>\n        \n        <circle cx="80" cy="140" r="5" fill="${this.state.isLooping?"url(#amberLED)":"#331100"}" class="led-loop" stroke="#333" stroke-width="1"/>\n        <text x="80" y="152" text-anchor="middle" fill="#fff" font-size="8" font-weight="bold" font-family="Arial, sans-serif">LOOP</text>\n        \n        \x3c!-- Two control knobs side by side on left - VOLUME and TEMPO only --\x3e\n        \x3c!-- Volume knob --\x3e\n        <g id="volume-knob" class="knob-group" data-param="volume" style="cursor: pointer;">\n          <circle cx="40" cy="100" r="15" fill="url(#chromeKnob)" stroke="#999" stroke-width="1"/>\n          <circle cx="40" cy="100" r="12" fill="#ddd"/>\n          <line x1="40" y1="90" x2="40" y2="95" stroke="#333" stroke-width="2" stroke-linecap="round" class="knob-pointer"/>\n          <text x="40" y="122" text-anchor="middle" fill="#fff" font-size="9" font-weight="bold" font-family="Arial, sans-serif">VOLUME</text>\n          <text x="40" y="132" text-anchor="middle" fill="#ccc" font-size="7" font-family="Arial, sans-serif">100%</text>\n        </g>\n        \n        \x3c!-- Tempo knob --\x3e\n        <g id="speed-knob" class="knob-group" data-param="speed" style="cursor: pointer;">\n          <circle cx="80" cy="100" r="15" fill="url(#chromeKnob)" stroke="#999" stroke-width="1"/>\n          <circle cx="80" cy="100" r="12" fill="#ddd"/>\n          <line x1="80" y1="90" x2="80" y2="95" stroke="#333" stroke-width="2" stroke-linecap="round" class="knob-pointer"/>\n          <text x="80" y="122" text-anchor="middle" fill="#fff" font-size="9" font-weight="bold" font-family="Arial, sans-serif">TEMPO</text>\n        </g>\n\n\n        \x3c!-- Row 2: A POINT Controls (y=115 baseline) --\x3e\n        <text x="145" y="110" text-anchor="middle" fill="#fff" font-size="7" font-weight="bold" font-family="Arial, sans-serif">A POINT</text>\n        <g id="point-a-back" class="control-button" data-action="a-back" style="cursor: pointer;">\n          <rect x="125" y="115" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="135" y="125" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">◀</text>\n        </g>\n        <g id="point-a-forward" class="control-button" data-action="a-forward" style="cursor: pointer;">\n          <rect x="155" y="115" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="165" y="125" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">▶</text>\n        </g>\n        \n        \x3c!-- Row 3: B POINT Controls (y=145 baseline) --\x3e\n        <text x="145" y="140" text-anchor="middle" fill="#fff" font-size="7" font-weight="bold" font-family="Arial, sans-serif">B POINT</text>\n        <g id="point-b-back" class="control-button" data-action="b-back" style="cursor: pointer;">\n          <rect x="125" y="145" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="135" y="155" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">◀</text>\n        </g>\n        <g id="point-b-forward" class="control-button" data-action="b-forward" style="cursor: pointer;">\n          <rect x="155" y="145" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="165" y="155" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">▶</text>\n        </g>\n        \n        \x3c!-- Reset button (above and between knobs) --\x3e\n        <g id="reset-button" style="cursor: pointer;" class="reset-button">\n          <circle cx="60" cy="85" r="6" fill="#333" stroke="#666" stroke-width="1"/>\n          <text x="60" y="89" text-anchor="middle" fill="#ccc" font-size="8" font-weight="bold" font-family="Arial, sans-serif">R</text>\n          <text x="60" y="97" text-anchor="middle" fill="#888" font-size="6" font-family="Arial, sans-serif">RST</text>\n        </g>\n        \n        \n        \x3c!-- Loop manipulation buttons - new modern controls --\x3e\n        \n        \x3c!-- Half loop button --\x3e\n        \x3c!-- LEFT SIDE: LOOP Controls - Unified Professional Design --\x3e\n        <text x="60" y="160" text-anchor="middle" fill="#fff" font-size="8" font-weight="bold" font-family="Arial, sans-serif">LOOP</text>\n        \n        \x3c!-- Half Loop Button --\x3e\n        <g id="half-loop" class="loop-button" data-action="half-loop" style="cursor: pointer;">\n          <rect x="15" y="175" width="22" height="18" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="26" y="186" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">½×</text>\n        </g>\n        \n        \x3c!-- Double Loop Button --\x3e\n        <g id="double-loop" class="loop-button" data-action="double-loop" style="cursor: pointer;">\n          <rect x="43" y="175" width="22" height="18" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="54" y="186" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">2×</text>\n        </g>\n        \n        \x3c!-- Quantize Button --\x3e\n        <g id="quantize-loop" class="loop-button" data-action="quantize-loop" style="cursor: pointer;">\n          <rect x="71" y="175" width="32" height="18" rx="3" fill="#0a4a0a" stroke="#0f0" stroke-width="1"/>\n          <text x="87" y="186" text-anchor="middle" fill="#0f0" font-size="10" font-weight="bold" font-family="Arial, sans-serif">QNTZ</text>\n        </g>\n        \n        \x3c!-- Tap Tempo button - small round button same level as RESET --\x3e\n        <g id="tap-tempo" class="tap-button" style="cursor: pointer;" data-action="tap-tempo">\n          <circle cx="100" cy="85" r="6" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="100" y="89" text-anchor="middle" fill="#ff0" font-size="7" font-weight="bold" font-family="Arial, sans-serif">T</text>\n          <text x="100" y="97" text-anchor="middle" fill="#888" font-size="5" font-family="Arial, sans-serif">TAP</text>\n        </g>\n        \n        \x3c!-- BPM Display - below TAP button --\x3e\n        <text id="bpm-display" x="100" y="105" text-anchor="middle" fill="#888" font-size="6" font-family="${t.display.fontFamily}">---BPM</text>\n        \n        \x3c!-- RIGHT COLUMN: UNIFIED BUTTON GRID - Compact Professional Layout --\x3e\n        \n        \x3c!-- SHIFT Controls (moved up to align with loop buttons at y=175) --\x3e\n        <text x="145" y="170" text-anchor="middle" fill="#fff" font-size="7" font-weight="bold" font-family="Arial, sans-serif">SHIFT</text>\n        <g id="section-back" class="control-button" data-action="section-back" style="cursor: pointer;">\n          <rect x="125" y="175" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="135" y="185" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">◀</text>\n        </g>\n        <g id="section-forward" class="control-button" data-action="section-forward" style="cursor: pointer;">\n          <rect x="155" y="175" width="20" height="16" rx="3" fill="#444" stroke="#666" stroke-width="1"/>\n          <text x="165" y="185" text-anchor="middle" fill="#fff" font-size="11" font-weight="bold" font-family="Arial, sans-serif">▶</text>\n        </g>\n        \n        \x3c!-- Main Footswitch - Professional Full-Width Design --\x3e\n        <g id="footswitch" style="cursor: pointer;" class="footswitch">\n          <rect x="20" y="200" width="150" height="60" rx="4" ry="4" fill="#000" stroke="#333" stroke-width="2"/>\n          <rect x="25" y="205" width="140" height="50" rx="2" ry="2" fill="#111" stroke="#222" stroke-width="1"/>\n          <rect x="30" y="210" width="130" height="40" rx="2" ry="2" fill="#222"/>\n          <text x="95" y="228" text-anchor="middle" fill="#ccc" font-size="11" font-weight="bold" font-family="Arial, sans-serif">REC</text>\n          <text x="95" y="242" text-anchor="middle" fill="#ccc" font-size="11" font-weight="bold" font-family="Arial, sans-serif">PLAY</text>\n        </g>\n        \n      </svg>\n    `}setupGUIEventListeners(t){const e=t.querySelector("#footswitch");e&&e.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.handleFootswitchClick()});t.querySelectorAll(".knob-group").forEach(t=>{t.addEventListener("mousedown",e=>this.startKnobDrag(e,t))});const i=t.querySelector("#reset-button");i&&i.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.resetPlaybackSettings()});const o=t.querySelectorAll(".control-button");console.log(`Found ${o.length} control buttons`),o.forEach(t=>{t.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation();const i=t.getAttribute("data-action");console.log(`Control button clicked: ${i}`),i?"a-back"===i||"a-forward"===i||"b-back"===i||"b-forward"===i?(console.log(`Executing jog: ${i}`),this.showHUD(`Jog: ${i}`,500),this.handleJogButton(i)):"section-forward"===i?(console.log("Executing section-forward"),this.showHUD("Section →",500),this.shiftLoopSection(1)):"section-back"===i&&(console.log("Executing section-back"),this.showHUD("Section ←",500),this.shiftLoopSection(-1)):console.log("No action found on button")})});t.querySelectorAll(".loop-button").forEach(t=>{t.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation();const i=t.getAttribute("data-action");"half-loop"===i?this.halfLoopLength():"double-loop"===i?this.doubleLoopLength():"quantize-loop"===i&&(this.quantizeLoop(),setTimeout(()=>this.animateButton(t,"#0a0"),10))})});const s=t.querySelector("#tap-tempo");s&&s.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.handleTapTempo()}),document.addEventListener("mousemove",t=>this.handleKnobDrag(t)),document.addEventListener("mouseup",()=>this.endKnobDrag());const n=t.querySelector("#hamburger-menu");n&&n.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.showSettingsModal()});const a=t.querySelector("#close-button");a&&a.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.toggleGUI()});let r=!1,l={x:0,y:0};const c=e=>{r&&(t.style.right=window.innerWidth-e.clientX-l.x+"px",t.style.bottom=window.innerHeight-e.clientY-l.y+"px",e.stopPropagation())},d=()=>{r&&(r=!1,t.style.cursor="",document.removeEventListener("mousemove",c),document.removeEventListener("mouseup",d))};t.addEventListener("mousedown",e=>{if(e.target.closest(".knob-group, #footswitch, .control-button, .loop-button, .tap-button, #reset-button, #hamburger-menu, #close-button"))return;const i=t.getBoundingClientRect();e.clientY-i.top>30*this.settings.guiScale||(e.preventDefault(),e.stopPropagation(),r=!0,l.x=e.clientX-i.left,l.y=e.clientY-i.top,t.style.cursor="grabbing",document.addEventListener("mousemove",c),document.addEventListener("mouseup",d))})}toggleGUI(){this.state.guiElement&&(this.state.isGuiVisible=!this.state.isGuiVisible,this.state.isGuiVisible?(this.state.guiElement.style.opacity="1",this.state.guiElement.style.transform="scale(1) translateY(0)",this.state.guiElement.style.pointerEvents="auto",this.showHUD("Guitar pedal GUI shown (Shift+G)",1e3),this.state.activeMedia&&(this.initializeNativeAudioControls(),this.updateDisplayText())):(this.state.guiElement.style.opacity="0",this.state.guiElement.style.transform="scale(0.9) translateY(20px)",this.state.guiElement.style.pointerEvents="none",this.showHUD("Guitar pedal GUI hidden",700)))}handleFootswitchClick(){if(!this.state.activeMedia)return void this.showHUD("No media found",1e3);if(this.state.isQuantized){null!==this.state.originalPointA&&null!==this.state.originalPointB&&(this.state.pointA=this.state.originalPointA,this.state.pointB=this.state.originalPointB,null!==this.state.loopA&&null!==this.state.loopB&&(this.state.loopA=this.state.originalPointA,this.state.loopB=this.state.originalPointB)),this.state.isQuantized=!1,this.state.originalPointA=null,this.state.originalPointB=null;const t=this.state.guiElement?.querySelector("#quantize-loop rect");t&&t.setAttribute("fill","#0a4a0a"),this.showHUD("Quantize OFF - Auto-disabled by footswitch",1e3)}const t=Date.now(),e=t-this.state.lastTapTime;this.state.lastTapTime=t,this.state.isLooping?this.resetLoop():null===this.state.pointA?(this.setPointA(),this.updateGUILEDs()):null===this.state.pointB||e>1200?(this.setPointB(),null!==this.state.pointA&&null!==this.state.pointB&&this.startLoop(),this.updateGUILEDs()):(this.resetLoop(),this.updateGUILEDs())}updateGUILEDs(){if(!this.state.guiElement)return;const t=this.currentTheme,e=this.state.guiElement.querySelector(".led-a"),i=this.state.guiElement.querySelector(".led-b"),o=this.state.guiElement.querySelector(".led-loop");e&&e.setAttribute("fill",this.state.pointA?t.leds.on.a:t.leds.off.a),i&&i.setAttribute("fill",this.state.pointB?t.leds.on.b:t.leds.off.b),o&&o.setAttribute("fill",this.state.isLooping?t.leds.on.loop:t.leds.off.loop),this.updateDisplayText()}updateDisplayText(){if(!this.state.guiElement||!this.state.activeMedia)return;const t=this.state.pointA?this.formatTimeShort(this.state.pointA):"--:--.--",e=this.state.pointB?this.formatTimeShort(this.state.pointB):"--:--.--",i=this.state.currentPitchShift>0?"+":"",o=0!==this.state.currentPitchShift?` ${i}${this.state.currentPitchShift}ST`:"",s=`${Math.round(100*this.state.currentSpeedMultiplier)}%`,n=this.state.guiElement.querySelector("#a-time-display");n&&(n.textContent=`A:${t}`);const a=this.state.guiElement.querySelector("#b-time-display");a&&(a.textContent=`B:${e}`);const r=this.state.guiElement.querySelector("#param-display");r&&(this.state.isLooping?r.textContent=`LOOP ${s}${o}`:0!==this.state.currentPitchShift||1!==this.state.currentSpeedMultiplier?r.textContent=`${s}${o}`:r.textContent="READY");const l=this.state.guiElement.querySelector("#status-display");l&&(this.state.isLooping?l.textContent="LOOPING":this.state.pointB?l.textContent="A→B SET":this.state.pointA?l.textContent="A SET":l.textContent="READY")}formatTimeShort(t){const e=Math.floor(t/60),i=Math.floor(t%60),o=Math.floor(t%1*100);return`${e}:${i.toString().padStart(2,"0")}.${o.toString().padStart(2,"0")}`}startKnobDrag(t,e){t.preventDefault(),t.stopPropagation();const i=e.getAttribute("data-param");i&&(this.state.isDraggingKnob=i,document.body.style.cursor="grabbing")}handleKnobDrag(t){if(!this.state.isDraggingKnob)return;const e=t.movementY;switch(this.state.isDraggingKnob){case"volume":this.adjustYouTubeVolume(.005*-e);break;case"speed":const t=.002;this.adjustPlaybackRate(-e*t)}this.updateKnobRotation(this.state.isDraggingKnob)}endKnobDrag(){this.state.isDraggingKnob=null,document.body.style.cursor=""}showParameterChange(t){}updateKnobRotation(t){if(!this.state.guiElement)return;const e=this.state.guiElement.querySelector(`#${t}-knob .knob-pointer`);if(!e)return;let i=0;const o="volume"===t?40:80;switch(t){case"volume":this.state.activeMedia&&(i=300*(this.state.activeMedia.volume-.5));break;case"speed":i=150*((this.state.currentSpeedMultiplier-1)/.5)}if(e.setAttribute("transform",`rotate(${i} ${o} 100)`),"volume"===t&&this.state.activeMedia){const t=this.state.guiElement.querySelector("#volume-knob text:last-child");t&&(t.textContent=`${Math.round(100*this.state.activeMedia.volume)}%`)}}showParameterInDisplay(t){if(!this.state.guiElement||!this.state.isGuiVisible)return;const e=this.state.guiElement.querySelector("#status-display");e&&(e.textContent=t,setTimeout(()=>{if(this.state.guiElement&&this.state.isGuiVisible){const t=this.state.guiElement.querySelector("#status-display");t&&(this.state.isLooping?t.textContent="LOOPING":this.state.pointB?t.textContent="A→B SET":this.state.pointA?t.textContent="A SET":t.textContent="READY")}},2e3))}adjustYouTubeVolume(t){if(!this.state.activeMedia)return void this.showHUD("No media found",1e3);const e=Math.max(0,Math.min(1,this.state.activeMedia.volume+t));this.state.activeMedia.volume=e;const i=Math.round(100*e);this.showHUD(`Volume: ${i}%`,500),this.showParameterChange(`VOLUME: ${i}%`),this.updateDisplayText()}handleJogButton(t){if(!this.state.activeMedia)return void this.showHUD("No media found",1e3);const e=this.settings.jogAdjustmentMs/1e3;switch(t){case"a-back":null!==this.state.pointA?(this.state.pointA=Math.max(0,this.state.pointA-e),this.showHUD(`A: ${this.formatTimeWithMs(this.state.pointA)}`,1200),this.updateGUILEDs(),this.updateDisplayText()):this.showHUD("Set point A first with footswitch",1e3);break;case"a-forward":if(null!==this.state.pointA){const t=this.state.activeMedia.duration||this.state.activeMedia.currentTime+10,i=this.state.pointA+e;!this.state.pointB||i<this.state.pointB?(this.state.pointA=Math.min(t,i),this.showHUD(`A: ${this.formatTimeWithMs(this.state.pointA)}`,1200),this.updateGUILEDs(),this.updateDisplayText()):this.showHUD("Point A cannot pass point B",1e3)}else this.showHUD("Set point A first with footswitch",1e3);break;case"b-back":if(null!==this.state.pointB){const t=this.state.pointB-e;!this.state.pointA||t>this.state.pointA?(this.state.pointB=Math.max(0,t),this.showHUD(`B: ${this.formatTimeWithMs(this.state.pointB)}`,1200),this.updateGUILEDs(),this.updateDisplayText()):this.showHUD("Point B cannot pass point A",1e3)}else this.showHUD("Set point B first with footswitch",1e3);break;case"b-forward":if(null!==this.state.pointB){const t=this.state.activeMedia.duration||this.state.activeMedia.currentTime+10;this.state.pointB=Math.min(t,this.state.pointB+e),this.showHUD(`B: ${this.formatTimeWithMs(this.state.pointB)}`,1200),this.updateGUILEDs(),this.updateDisplayText()}else this.showHUD("Set point B first with footswitch",1e3)}}shiftLoopSection(t){if(!this.state.pointA||!this.state.pointB||!this.state.activeMedia)return void this.showHUD("Set loop points first",1e3);const e=(this.state.pointB-this.state.pointA)*t,i=this.state.pointA+e,o=this.state.pointB+e;if(i<0||o>this.state.activeMedia.duration)return void this.showHUD("Cannot shift: reached media boundary",1e3);this.state.pointA=i,this.state.pointB=o,null!==this.state.loopA&&null!==this.state.loopB&&(this.state.loopA=i,this.state.loopB=o),this.state.isLooping&&this.state.activeMedia&&(this.state.activeMedia.currentTime=this.state.pointA);const s=t>0?"forward":"backward";this.showHUD(`Section shifted ${s}`,1e3),this.updateGUILEDs(),this.updateDisplayText()}formatTime(t){const e=Math.floor(t/60),i=Math.floor(t%60),o=Math.floor(t%1*100);return`${e}:${i.toString().padStart(2,"0")}.${o.toString().padStart(2,"0")}`}formatTimeWithMs(t){const e=Math.floor(t/60),i=Math.floor(t%60),o=Math.floor(t%1*100);return`${e}:${i.toString().padStart(2,"0")}.${o.toString().padStart(2,"0")}`}getCurrentInterval(){return this.musicalIntervals.find(t=>t.semitones===this.state.currentSemitoneShift)||this.musicalIntervals[7]}getCurrentIntervalName(){return this.getCurrentInterval().name.replace("Original pitch","Orig").replace(" up","↑").replace(" down","↓")}getCurrentPlaybackRate(){return this.getCurrentInterval().rate.toFixed(3)}initializeNativeAudioControls(){this.state.activeMedia&&(this.state.activeMedia.preservesPitch=!0,this.state.activeMedia.playbackRate=1,this.state.currentPitchShift=0,this.state.currentSpeedMultiplier=1,this.settings.enableExperimentalEQ&&this.setupEQ(this.state.activeMedia),this.showHUD("Audio controls and EQ initialized",800),console.log("[PunchLooper] Native audio controls and EQ initialized"))}cleanupAudioProcessing(){this.cleanupEQ(),this.state.activeMedia&&(this.state.activeMedia.playbackRate=1,this.state.activeMedia.preservesPitch=!0,console.log("[PunchLooper] Audio settings reset to defaults")),this.beatDetector&&this.beatDetector.disconnect()}handleTapTempo(){this.showHUD("Tap!",300);const t=this.beatDetector.tap();if(t>0){const e=this.state.guiElement?.querySelector("#bpm-display");e&&(e.textContent=`${Math.round(t)}BPM`);const i=this.state.guiElement?.querySelector("#tap-tempo circle");i&&(i.setAttribute("fill","#666"),setTimeout(()=>{i.setAttribute("fill","#444")},100)),t>40&&t<200&&this.showHUD(`Tap Tempo: ${Math.round(t)} BPM`,500)}else this.showHUD("Keep tapping to set tempo...",800)}setupEQ(t){try{this.state.audioContext||(this.state.audioContext=new(window.AudioContext||window.webkitAudioContext)),this.cleanupEQ(),this.state.sourceNode=this.state.audioContext.createMediaElementSource(t),this.state.eqFilters.low=this.state.audioContext.createBiquadFilter(),this.state.eqFilters.lowMid=this.state.audioContext.createBiquadFilter(),this.state.eqFilters.mid=this.state.audioContext.createBiquadFilter(),this.state.eqFilters.highMid=this.state.audioContext.createBiquadFilter(),this.state.eqFilters.high=this.state.audioContext.createBiquadFilter(),this.state.eqFilters.low.type="lowshelf",this.state.eqFilters.low.frequency.setValueAtTime(60,this.state.audioContext.currentTime),this.state.eqFilters.lowMid.type="peaking",this.state.eqFilters.lowMid.frequency.setValueAtTime(250,this.state.audioContext.currentTime),this.state.eqFilters.lowMid.Q.setValueAtTime(1,this.state.audioContext.currentTime),this.state.eqFilters.mid.type="peaking",this.state.eqFilters.mid.frequency.setValueAtTime(1e3,this.state.audioContext.currentTime),this.state.eqFilters.mid.Q.setValueAtTime(1,this.state.audioContext.currentTime),this.state.eqFilters.highMid.type="peaking",this.state.eqFilters.highMid.frequency.setValueAtTime(4e3,this.state.audioContext.currentTime),this.state.eqFilters.highMid.Q.setValueAtTime(1,this.state.audioContext.currentTime),this.state.eqFilters.high.type="highshelf",this.state.eqFilters.high.frequency.setValueAtTime(12e3,this.state.audioContext.currentTime),this.state.sourceNode.connect(this.state.eqFilters.low),this.state.eqFilters.low.connect(this.state.eqFilters.lowMid),this.state.eqFilters.lowMid.connect(this.state.eqFilters.mid),this.state.eqFilters.mid.connect(this.state.eqFilters.highMid),this.state.eqFilters.highMid.connect(this.state.eqFilters.high),this.state.eqFilters.high.connect(this.state.audioContext.destination),this.updateEQ()}catch(e){console.error("Failed to setup EQ:",e)}}updateEQ(){if(!this.state.audioContext||!this.state.eqFilters.low)return;const t=this.state.audioContext.currentTime;try{this.state.eqFilters.low.gain.setValueAtTime(this.settings.eq.low,t),this.state.eqFilters.lowMid.gain.setValueAtTime(this.settings.eq.lowMid,t),this.state.eqFilters.mid.gain.setValueAtTime(this.settings.eq.mid,t),this.state.eqFilters.highMid.gain.setValueAtTime(this.settings.eq.highMid,t),this.state.eqFilters.high.gain.setValueAtTime(this.settings.eq.high,t)}catch(e){console.error("Failed to update EQ:",e)}}cleanupEQ(){if(this.state.sourceNode){try{this.state.sourceNode.disconnect()}catch(t){}this.state.sourceNode=null}Object.values(this.state.eqFilters).forEach(e=>{if(e)try{e.disconnect()}catch(t){}}),this.state.eqFilters={low:null,lowMid:null,mid:null,highMid:null,high:null}}destroy(){this.stopLoop(),this.cleanupAudioProcessing(),this.mutationObserver&&this.mutationObserver.disconnect(),this.state.hudElement&&this.state.hudElement.remove(),this.state.guiElement&&this.state.guiElement.remove(),this.state.hudTimeout&&clearTimeout(this.state.hudTimeout),document.removeEventListener("keydown",this.handleKeyDown.bind(this)),document.removeEventListener("keyup",this.handleKeyUp.bind(this))}}let n=null;"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{n=new s}):n=new s,window.addEventListener("beforeunload",()=>{n&&n.destroy()});
